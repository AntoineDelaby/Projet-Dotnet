// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using ProjetDotnet.Client.App;

#nullable disable

namespace ProjetDotnet.Client.App.Migrations
{
    [DbContext(typeof(ClientDBContext))]
    [Migration("20250312085035_InitialCreate")]
    partial class InitialCreate
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.2")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("ProjetDotnet.Client.App.CarteBancaire", b =>
                {
                    b.Property<int>("Identifiant")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Identifiant"));

                    b.Property<string>("NumeroCarte")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Identifiant");

                    b.ToTable("CarteBancaire");
                });

            modelBuilder.Entity("ProjetDotnet.Client.App.Clients", b =>
                {
                    b.Property<int>("Identifiant")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Identifiant"));

                    b.Property<string>("CodePostal")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Complement_Adresse")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Libelle_Adresse")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Mail")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Nom")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Ville")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Identifiant");

                    b.ToTable("Clients", (string)null);

                    b.UseTptMappingStrategy();
                });

            modelBuilder.Entity("ProjetDotnet.Client.App.ClientParticulier", b =>
                {
                    b.HasBaseType("ProjetDotnet.Client.App.Clients");

                    b.Property<DateTime>("DateDeNaissance")
                        .HasColumnType("datetime2");

                    b.Property<string>("Prenom")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Sexe")
                        .HasColumnType("int");

                    b.ToTable("ClientParticulier", (string)null);
                });

            modelBuilder.Entity("ProjetDotnet.Client.App.ClientProfessionnel", b =>
                {
                    b.HasBaseType("ProjetDotnet.Client.App.Clients");

                    b.Property<string>("Codepostal_Siege")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Complement_AdresseSiege")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Libelle_AdresseSiege")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Siret")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("StatutJuridique")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Ville_Siege")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.ToTable("ClientProfessionnel", (string)null);
                });

            modelBuilder.Entity("ProjetDotnet.Client.App.ClientParticulier", b =>
                {
                    b.HasOne("ProjetDotnet.Client.App.Clients", null)
                        .WithOne()
                        .HasForeignKey("ProjetDotnet.Client.App.ClientParticulier", "Identifiant")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("ProjetDotnet.Client.App.ClientProfessionnel", b =>
                {
                    b.HasOne("ProjetDotnet.Client.App.Clients", null)
                        .WithOne()
                        .HasForeignKey("ProjetDotnet.Client.App.ClientProfessionnel", "Identifiant")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
